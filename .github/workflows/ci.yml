name: CI

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'

jobs:
  test:
    name: PHP ${{ matrix.php-version }} - WP ${{ matrix.wordpress-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ['7.4', '8.0', '8.1', '8.2']
        wordpress-version: ['latest', '6.3', '6.2']
        include:
          - php-version: '7.4'
            wordpress-version: '5.9'
          - php-version: '8.2'
            wordpress-version: 'trunk'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, mysql
          coverage: xdebug
          tools: composer:v2

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run PHPUnit tests
        run: composer test

      - name: Upload coverage to Codecov
        if: matrix.php-version == '8.1' && matrix.wordpress-version == 'latest'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, intl
          coverage: none
          tools: composer:v2, cs2pr

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run PHP CodeSniffer
        run: composer phpcs -- --report=checkstyle | cs2pr

      - name: Run PHPStan
        run: composer phpstan
        continue-on-error: true

  build:
    name: Build Plugin
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
        if: ${{ hashFiles('package-lock.json') != '' }}

      - name: Install Node dependencies
        run: npm ci
        if: ${{ hashFiles('package-lock.json') != '' }}

      - name: Build assets
        run: npm run build
        if: ${{ hashFiles('package-lock.json') != '' }}

      - name: Create plugin archive
        run: |
          mkdir -p build
          if [ -f .distignore ]; then
            rsync -av --exclude-from='.distignore' . build/gf-verifytx-addon/
          else
            rsync -av \
              --exclude='.git' \
              --exclude='.github' \
              --exclude='tests' \
              --exclude='vendor' \
              --exclude='node_modules' \
              --exclude='*.log' \
              --exclude='.env*' \
              --exclude='composer.*' \
              --exclude='phpunit.xml*' \
              --exclude='phpstan.*' \
              --exclude='.*' \
              . build/gf-verifytx-addon/
          fi
          cd build
          zip -r gf-verifytx-addon.zip gf-verifytx-addon/

      - name: Upload plugin artifact
        uses: actions/upload-artifact@v3
        with:
          name: gf-verifytx-addon-${{ github.sha }}
          path: build/gf-verifytx-addon.zip
          retention-days: 7

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from plugin file
        id: get_version
        run: |
          VERSION=$(grep "Version:" gf-verifytx-addon.php | awk '{print $3}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check_tag
        run: |
          if git ls-remote --tags origin | grep "refs/tags/v${{ steps.get_version.outputs.version }}"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Download artifact
        if: steps.check_tag.outputs.exists == 'false'
        uses: actions/download-artifact@v3
        with:
          name: gf-verifytx-addon-${{ github.sha }}

      - name: Create Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          body: |
            ## GF VerifyTX Addon v${{ steps.get_version.outputs.version }}

            ### Changes
            - See [commit history](https://github.com/${{ github.repository }}/commits/v${{ steps.get_version.outputs.version }}) for changes.

            ### Installation
            1. Download the `gf-verifytx-addon.zip` file
            2. Upload to WordPress via Plugins → Add New → Upload Plugin
            3. Activate the plugin
            4. Configure your VerifyTX API credentials in Forms → Settings → VerifyTX

            ### Requirements
            - WordPress 5.0+
            - PHP 7.4+
            - Gravity Forms 2.5+
          files: gf-verifytx-addon.zip
          draft: false
          prerelease: false